package com.mttb.spiders;


import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;

public class Driver {

	public static WebDriver driver = new FirefoxDriver();
	
	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		//driver.navigate().to("http://www.agriaffaires.es/");
		String url = "http://www.agriaffaires.es/usado/1/tractores-agricolas.html";
		int contadorPaginas=0;
		//Set listaEnlaces = new HashSet(); 
		Set listaSubEnlaces = new HashSet(); 
		Set listaEdictos = new HashSet(); 
		Set listaPdfs = new HashSet(); 
		//Map<String, String> datosCategoria = new HashMap<String, String>();
		Categoria datosCategoria2 = new Categoria();
		MySQLAccess dao = new MySQLAccess();
		
		PrintWriter pw = null;
		File file = new File("enlaces.txt");
		FileWriter fw = new FileWriter(file, false);
		pw = new PrintWriter(fw);
		
		while (contadorPaginas<1)
		{
			/*
			 * List all_links_webpage2 = driver.findElements(By.cssSelector("#listeRub > ul.pac_RubMere > li > h4 > a"));		
			 
			all_links_webpage2.addAll(driver.findElements(By.cssSelector("#listeRub > ul.pac_RubMere > li > a")));		
			Iterator<WebElement> it2 = all_links_webpage2.iterator();
			while (it2.hasNext())
			{
				WebElement elemento = (WebElement) it2.next();
				String urlEnlace = elemento.getAttribute("href");
				//System.out.println(urlEnlace);
				listaEnlaces.add(elemento.getAttribute("href"));
			}
			*/
			//List<String> listaEnlaces = getLinks(url);
			List<String> listaEnlacesArticulos = getArticleLinks(url);
			System.out.println("Encontrados ".concat(String.valueOf(listaEnlacesArticulos.size())).concat(" en el enlace ").concat(url));
			Iterator<String> itListaEnlacesArticulos= listaEnlacesArticulos.iterator();
			while (itListaEnlacesArticulos.hasNext()) {
				String urlEnlaceArt = itListaEnlacesArticulos.next();
				System.out.println(urlEnlaceArt);
				Article arti = new Article(urlEnlaceArt);
				arti.grabar();
			}
			if(contadorPaginas>=0) System.exit(0);
			
			List<Categoria> listaEnlaces = getLinks(url, 1, new Categoria());
			System.out.println("Encontrados ".concat(String.valueOf(listaEnlaces.size())).concat(" en el enlace ").concat(url));
			
			Iterator<Categoria> itListaEnlaces= listaEnlaces.iterator();
			//datosCategoria.put("level", "1");
			//datosCategoria.put("id", "1");
			//datosCategoria.put("parent", "1");
			while (itListaEnlaces.hasNext()) {
				//elemento.click();
				Categoria urlEnlace = itListaEnlaces.next();
				System.out.println(urlEnlace.getCategory_url());
				
				// Grabo la información de la categoría de análisis
				urlEnlace.grabar();
				urlEnlace.recargar();
				
				
				//Obtengo los enlaces de la subcategoría dependiente de esta
				List<Categoria> listaEnlacesSubcategoria = getLinks(urlEnlace.getCategory_url(), 2, urlEnlace);
				System.out.println("Encontrados ".concat(String.valueOf(listaEnlacesSubcategoria.size())).concat(" en el enlace ").concat(urlEnlace.getCategory_url()));
				if(listaEnlacesSubcategoria.size() == 0) {
					// Si la categoría no tiene categorías hijo
					urlEnlace.setEs_final(1);
					urlEnlace.actualizar();
				} else {
					// Si la categoría tiene subcategorias
					Iterator<Categoria> itListaEnlacesSubcategoria= listaEnlacesSubcategoria.iterator();
					//datosCategoria.put("level", "1");
					//datosCategoria.put("id", "1");
					//datosCategoria.put("parent", "1");
					while (itListaEnlacesSubcategoria.hasNext()) {
						//elemento.click();
						Categoria urlEnlace2 = itListaEnlacesSubcategoria.next();
						System.out.println(urlEnlace2.getCategory_url());
						
						// Grabo la información de la categoría de análisis
						urlEnlace2.grabar();
						urlEnlace2.recargar();
						
						//Obtengo los enlaces de la subsubcategoría dependiente de esta
						List<Categoria> listaEnlacesSubSubcategoria = getLinks(urlEnlace2.getCategory_url(), 3, urlEnlace2);
						System.out.println("Encontrados ".concat(String.valueOf(listaEnlacesSubSubcategoria.size())).concat(" en el enlace ").concat(urlEnlace2.getCategory_url()));
						if(listaEnlacesSubSubcategoria.size() == 0) {
							// Si la categoría no tiene categorías hijo
							urlEnlace2.setEs_final(1);
							urlEnlace2.actualizar();
						}  else {
							// Si la categoría tiene subcategorias
							Iterator<Categoria> itListaEnlacesSubSubcategoria= listaEnlacesSubSubcategoria.iterator();
							//datosCategoria.put("level", "1");
							//datosCategoria.put("id", "1");
							//datosCategoria.put("parent", "1");
							while (itListaEnlacesSubSubcategoria.hasNext()) {
								//elemento.click();
								Categoria urlEnlace3 = itListaEnlacesSubSubcategoria.next();
								System.out.println(urlEnlace3.getCategory_url());
								
								// Grabo la información de la categoría de análisis
								urlEnlace3.grabar();
							}
						}
					}
				}
			}
			
			dao.close();
			
		    
		    
			if(contadorPaginas>=0) System.exit(0);
			// ############### FIN DEL PROGRAMA
			
			
			
/*			
			System.out.println(" - Analizamos segundo nivel");
			Iterator<String> listaEnlaces1= listaEnlaces.iterator();
			while (listaEnlaces1.hasNext()) {
				//elemento.click();
				String urlEnlace = listaEnlaces1.next();
				driver.navigate().to(urlEnlace);
				System.out.println(urlEnlace);
				pw.println(urlEnlace);
				
				List all_links_subcat = driver.findElements(By.cssSelector("a.lienSsRub"));
				Iterator<WebElement> it3 = all_links_subcat.iterator();
				while (it3.hasNext())
				{
					WebElement subcat = (WebElement) it3.next();
					String urlEnlaceSubCat = subcat.getAttribute("href");
					System.out.println(" - ".concat(urlEnlaceSubCat));
					listaSubEnlaces.add(urlEnlaceSubCat);
					pw.println(" - ".concat(urlEnlaceSubCat));
					//WebElement paginaSiguiente = driver.findElement(By.id("paginacion:siguiente"));
				}
				//return;
				
			}*/

			
/*			System.out.println(" - Analizamos tercer nivel");
			Iterator<String> listaEnlaces2= listaSubEnlaces.iterator();
			while (listaEnlaces2.hasNext()) {
				String urlEnlace = listaEnlaces1.next();
				driver.navigate().to(urlEnlace);
				System.out.println("Visitando: ".concat(urlEnlace));
				driver.findElement(By.cssSelector("#flechePrix > b")).click();
			    driver.findElement(By.id("chkAdNotPrice")).click();
			    driver.findElement(By.id("divLienPlus")).click();
			    driver.findElement(By.id("reche_btn")).click();
			    
			}
			pw.close();*/
			//Instrucción para dejar el código original (para consulta) pero que no lo ejecute
			if(contadorPaginas>=0) return;
			
			
			
			
			List all_links_webpage = driver.findElements(By.tagName("a"));		
			WebElement paginaSiguiente = driver.findElement(By.id("paginacion:siguiente"));
			Iterator<WebElement> it = all_links_webpage.iterator();
			while (it.hasNext())
			{
				WebElement elemento = (WebElement) it.next();
				String urlEnlace = elemento.getAttribute("href");
				if (urlEnlace.contains("VisualizacionEdicto") && (urlEnlace.contains("subidioma%3Des")))
				{
					listaEdictos.add(elemento.getAttribute("href"));
					System.out.println(" - ".concat(elemento.getAttribute("href")));
					//elemento.click();
					
/*					WebDriverWait wait = new WebDriverWait(driver, 3);
					wait.until(ExpectedConditions.elementToBeClickable(By.tagName("img"))); 
					System.out.println(driver.getPageSource());
					List all_images_webpage = driver.findElements(By.tagName("img"));		
					Iterator<WebElement> itImg = all_links_webpage.iterator();
					while (itImg.hasNext())
					{
						WebElement pdf = (WebElement) it.next();
						System.out.println(pdf.getAttribute("src"));
/*						if (pdf.getAttribute("src").contains("=PDF"))
						{
							System.out.println("Pdf encontrado:" + pdf.getAttribute("src"));													
						}
*/
				}
			}		
			paginaSiguiente.click();
			contadorPaginas++;
		}
		
		Iterator itEdictos = listaEdictos.iterator();
		while (itEdictos.hasNext())
		{
			String urlEdicto = (String) itEdictos.next();
			System.out.println(urlEdicto);					
			driver.navigate().to(urlEdicto);
			List all_images_webpage = driver.findElements(By.tagName("a"));		
			Iterator<WebElement> itImg = all_images_webpage.iterator();
			while (itImg.hasNext())
			{
				WebElement pdf = (WebElement) itImg.next();
				if (pdf.getAttribute("href").contains("=PDF"))
				{
					System.out.println(pdf.getAttribute("href"));													
					listaPdfs.add(pdf.getAttribute("href"));
				}
				
			}
		}
		driver.close();	
	}

	public static List<Categoria> getLinks (String url, Integer level, Categoria parent) {
		// Recupera la lista de enlaces de las categorías o subcategorías
		List<String> all_links =  new ArrayList<String>();
		List<Categoria> categorias = new ArrayList<Categoria>();
		Categoria datosCategoria = new Categoria();
		if(url.isEmpty() || url.length() == 0) return null;
		System.out.println("Viajando a ".concat(url));
		driver.navigate().to(url);
		List all_links_webpage2 = driver.findElements(By.cssSelector("#listeRub > ul.pac_RubMere > li > h4 > a"));	// Enlaces de pagina principal
		all_links_webpage2.addAll(driver.findElements(By.cssSelector("#listeRub > ul.pac_RubMere > li > a")));	// Enlaces de pagina principal
		all_links_webpage2.addAll( driver.findElements(By.cssSelector("a.lienSsRub")));	// Enlaces de página de subcategoría	
		Iterator<WebElement> it2 = all_links_webpage2.iterator();
		while (it2.hasNext())
		{
			WebElement elemento = (WebElement) it2.next();
			String urlEnlace = elemento.getAttribute("href");
			//System.out.println(urlEnlace);
			all_links.add(urlEnlace);
			Integer id_parent = parent.getId();
			if(id_parent == null) id_parent = 0;
			categorias.add(new Categoria(id_parent, level, urlEnlace));
		}
		
		return categorias;
	}

	
	public static List<String> getArticleLinks (String url) {
		// Recupera enlaces a las fichas de los productos
		List<String> all_links =  new ArrayList<String>();
		Integer contador = 0;
		if(url.isEmpty() || url.length() == 0) return null;
		System.out.println("Viajando a ".concat(url));
		driver.navigate().to(url);
		
		//Recupero los enlaces de la primera página
		List all_links_ = driver.findElements(By.xpath("//div[@class = 'listannonce']//a"));	// Enlaces de productos
		Iterator<WebElement> it2 = all_links_.iterator();
		while (it2.hasNext())
		{
			WebElement elemento = (WebElement) it2.next();
			//System.out.println(elemento.getText());
			String urlEnlace = elemento.getAttribute("href");
			//System.out.println(urlEnlace);
			all_links.add(urlEnlace);
		}
		
		while(contador < 2 && !driver.findElements(By.partialLinkText("página siguiente")).isEmpty()) {
			//Mientras detecte el enlace a siguiente página, voy visitándolas y repitiendo la acción anterior 
			// sacando más enlaces y añadiéndolos al array de resultados
			it2 = null;
			all_links_ = null;
			driver.findElement(By.partialLinkText("página siguiente")).click();
			all_links_ = driver.findElements(By.xpath("//div[@class = 'listannonce']//a"));	// Enlaces de productos
			it2 = all_links_.iterator();
			while (it2.hasNext())
			{
				WebElement elemento = (WebElement) it2.next();
				//System.out.println(elemento.getText());
				String urlEnlace = elemento.getAttribute("href");
				//System.out.println(urlEnlace);
				all_links.add(urlEnlace);
			}
			contador++;
		}
		
		
		
		return all_links;
	}
}
